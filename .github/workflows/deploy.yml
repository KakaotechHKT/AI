name: Deploy Docker Container

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest  # Ubuntu 기반 환경에서 실행

    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ vars.IMAGE_NAME }} .
          docker push ${{ vars.IMAGE_NAME }}

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: SSH to server and deploy Docker container
        env:
          IMAGE_NAME: ${{ vars.IMAGE_NAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.SERVER_IP }} << EOF
            echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
            
            # 기존 컨테이너 중지 및 삭제
            docker stop babpat-ai || true
            docker rm -f babpat-ai || true
            
            # 불필요한 이미지와 캐시 삭제 (공간 부족 예방)
            docker system prune -af
            
            # 최신 Docker 이미지 가져오기
            docker pull $IMAGE_NAME
            
            # 새로운 컨테이너 실행
            docker run -d --name babpat-ai \
              --restart unless-stopped \
              -p 8000:8000 \
              -e DB_HOST="$DB_HOST" \
              -e DB_NAME="$DB_NAME" \
              -e DB_USER="$DB_USER" \
              -e DB_PASSWORD="$DB_PASSWORD" \
              -e OPENAI_API_KEY="$OPENAI_API_KEY" \
              $IMAGE_NAME
          EOF